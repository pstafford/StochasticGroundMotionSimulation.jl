var documenterSearchIndex = {"docs":
[{"location":"site_scaling/","page":"Site scaling","title":"Site scaling","text":"CurrentModule = StochasticGroundMotionSimulation","category":"page"},{"location":"site_scaling/#Site-Scaling","page":"Site scaling","title":"Site Scaling","text":"","category":"section"},{"location":"site_scaling/","page":"Site scaling","title":"Site scaling","text":"Site response is defined in terms of site amplification, or impedance effects, as well as damping – via a kappa filter.","category":"page"},{"location":"site_scaling/","page":"Site scaling","title":"Site scaling","text":"The overall site model is therefore written as: S(f bmtheta_S) = S_I(f) times S_K(f) with S_I(f) representing the impedance effects, and S_K(f) being the kappa filter.","category":"page"},{"location":"random_vibration_parameters/","page":"Random Vibration Parameters","title":"Random Vibration Parameters","text":"CurrentModule = StochasticGroundMotionSimulation","category":"page"},{"location":"random_vibration_parameters/#Random-Vibration-Theory-Parameters","page":"Random Vibration Parameters","title":"Random Vibration Theory Parameters","text":"","category":"section"},{"location":"random_vibration_parameters/","page":"Random Vibration Parameters","title":"Random Vibration Parameters","text":"Definition of the custom type RandomVibrationParameters to represent the model components/approaches used for the random vibration theory calculations. In particular, the type stores symbols to define the:","category":"page"},{"location":"random_vibration_parameters/","page":"Random Vibration Parameters","title":"Random Vibration Parameters","text":"excitation_duration model to use,\nrms_duration model to use, and\npeak_factor model to use.","category":"page"},{"location":"random_vibration_parameters/","page":"Random Vibration Parameters","title":"Random Vibration Parameters","text":"  RandomVibrationParameters","category":"page"},{"location":"fourier_spectrum/","page":"Fourier Amplitude Spectrum","title":"Fourier Amplitude Spectrum","text":"CurrentModule = StochasticGroundMotionSimulation","category":"page"},{"location":"fourier_spectrum/#Fourier-Amplitude-Spectrum","page":"Fourier Amplitude Spectrum","title":"Fourier Amplitude Spectrum","text":"","category":"section"},{"location":"fourier_spectrum/","page":"Fourier Amplitude Spectrum","title":"Fourier Amplitude Spectrum","text":"The Fourier amplitude spectrum (FAS) can be represented as the product of source, path and site contributions.","category":"page"},{"location":"fourier_spectrum/","page":"Fourier Amplitude Spectrum","title":"Fourier Amplitude Spectrum","text":"Specifically, the Fourier amplitude spectrum A(f) of acceleration (in units of m/s) is defined as:","category":"page"},{"location":"fourier_spectrum/","page":"Fourier Amplitude Spectrum","title":"Fourier Amplitude Spectrum","text":"A(f bmtheta) = E(f bmtheta_E)times P(f bmtheta_P) times S(f bmtheta_S)","category":"page"},{"location":"fourier_spectrum/","page":"Fourier Amplitude Spectrum","title":"Fourier Amplitude Spectrum","text":"where f is a frequency in Hz, and bmtheta holds all of the relevant model parameters and predictor variables. The Fourier Source Spectrum, E(f bmtheta_E) is a function of the earthquake magnitude m, as well as other properties of the source. The Path Scaling, P(f bmtheta_P) accounts for the effects of both geometric spreading and anelastic attenuation. The Site Scaling, S(f bmtheta_S) includes the effects of near-surface impedance as well as damping (kappa_0) effects.","category":"page"},{"location":"source_spectrum/","page":"Source spectrum","title":"Source spectrum","text":"CurrentModule = StochasticGroundMotionSimulation","category":"page"},{"location":"source_spectrum/#Fourier-Source-Spectrum","page":"Source spectrum","title":"Fourier Source Spectrum","text":"","category":"section"},{"location":"source_spectrum/","page":"Source spectrum","title":"Source spectrum","text":"The source spectrum can be computed through interaction with the SourceParameters type, or the higher level FourierParameters type that holds a SourceParameters instance as a property.","category":"page"},{"location":"source_spectrum/","page":"Source spectrum","title":"Source spectrum","text":"The source spectrum E(f bmthetaE) is most commonly written in terms of:","category":"page"},{"location":"source_spectrum/","page":"Source spectrum","title":"Source spectrum","text":"  E(f bmtheta_E) = mathcalC M_0 E_s(f bmtheta_E)","category":"page"},{"location":"source_spectrum/","page":"Source spectrum","title":"Source spectrum","text":"where mathcalC is a constant term, to be defined shortly, M_0 is the seismic moment, and E_s(f bmtheta_E) is the source spectral shape.","category":"page"},{"location":"source_spectrum/","page":"Source spectrum","title":"Source spectrum","text":"The most commonly adopted source spectral shape is the omega^2 model that has the form:","category":"page"},{"location":"source_spectrum/","page":"Source spectrum","title":"Source spectrum","text":" E_s(f) = frac11 + left(fracff_cright)^2","category":"page"},{"location":"path_scaling/","page":"Path scaling","title":"Path scaling","text":"CurrentModule = StochasticGroundMotionSimulation","category":"page"},{"location":"path_scaling/#Path-Scaling","page":"Path scaling","title":"Path Scaling","text":"","category":"section"},{"location":"path_scaling/","page":"Path scaling","title":"Path scaling","text":"The path scaling can be broken into geometric spreading – including the effects of near-source saturation – and anelastic attenuation. Within StochasticGroundMotionSimulation the PathParameters type holds custom structs that relate to each of these three components:","category":"page"},{"location":"path_scaling/","page":"Path scaling","title":"Path scaling","text":"GeometricSpreadingParameters defines the geometric spreading model (spreading rates, transition distances, and functional scaling)\nNearSourceSaturationParameters defines the near-source saturation model, or the finite fault factors\nAnelasticAttenuationParameters defines the properties of the anelastic attenuation model.","category":"page"},{"location":"sdof_parameters/","page":"Oscillator Parameters","title":"Oscillator Parameters","text":"CurrentModule = StochasticGroundMotionSimulation","category":"page"},{"location":"sdof_parameters/#Single-Degree-of-Freedom-Oscillator-Parameters","page":"Oscillator Parameters","title":"Single Degree of Freedom Oscillator Parameters","text":"","category":"section"},{"location":"sdof_parameters/","page":"Oscillator Parameters","title":"Oscillator Parameters","text":"Definition of the custom type, Oscillator to represent a single degree of freedom (SDOF) oscillator. Type simply stores the oscillator frequency and damping ratio.","category":"page"},{"location":"sdof_parameters/","page":"Oscillator Parameters","title":"Oscillator Parameters","text":"  Oscillator","category":"page"},{"location":"sdof_parameters/","page":"Oscillator Parameters","title":"Oscillator Parameters","text":"## Functionality","category":"page"},{"location":"sdof_parameters/","page":"Oscillator Parameters","title":"Oscillator Parameters","text":"  period\n  transfer\n  squared_transfer","category":"page"},{"location":"sdof_parameters/#StochasticGroundMotionSimulation.period","page":"Oscillator Parameters","title":"StochasticGroundMotionSimulation.period","text":"period(sdof::Oscillator)\n\nNatural period (s) of the sdof Oscillator.\n\n\n\n\n\n","category":"function"},{"location":"sdof_parameters/#StochasticGroundMotionSimulation.transfer","page":"Oscillator Parameters","title":"StochasticGroundMotionSimulation.transfer","text":"transfer(f::T, sdof::Oscillator) where {T<:Real}\n\nCompute the modulus of the transfer function for a SDOF system\n\nExamples\n\n    f = 2.0\n    sdof = Oscillator(1.0, 0.05)\n    Hf = transfer(f, sdof)\n\n\n\n\n\ntransfer(f::Vector{T}, sdof::Oscillator) where T<:Real\n\nComputes the modulus of the transfer function of a SDOF for a vector of frequencies\n\nf::Vector is the vector of frequencies\nsdof::Oscillator is the oscillator instance\n\nExamples\n\n  f = collect(range(0.1, stop=10.0, step=0.01))\n  sdof = Oscillator(1.0)\n  Hf = transfer(f, sdof)\n\n\n\n\n\n","category":"function"},{"location":"sdof_parameters/#StochasticGroundMotionSimulation.squared_transfer","page":"Oscillator Parameters","title":"StochasticGroundMotionSimulation.squared_transfer","text":"squared_transfer(f, sdof::Oscillator)\n\nCompute the square of the transfer function for a SDOF system, sdof, at frequency f.\n\nExamples\n\n\tf = 2.0\n\t# create sdof with natural frequency f_n=1.0 and damping ζ=0.05\n\tsdof = Oscillator( 1.0, 0.05 )\n\tHf2 = squared_transfer( f, sdof )\n\n\n\n\n\n","category":"function"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"CurrentModule = StochasticGroundMotionSimulation","category":"page"},{"location":"fourier_parameters/#Fourier-Parameters","page":"Fourier Spectral Parameters","title":"Fourier Parameters","text":"","category":"section"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"Definition of the various custom types within the StochasticGroundMotionSimulation module. Types to store properties related to source, path, and site components of the Fourier spectral model are provided.","category":"page"},{"location":"fourier_parameters/#Source-Parameters","page":"Fourier Spectral Parameters","title":"Source Parameters","text":"","category":"section"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"The type SourceParameters holds the properties required to define the source spectrum of the Fourier Amplitude Spectrum.","category":"page"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"  SourceParameters","category":"page"},{"location":"fourier_parameters/#StochasticGroundMotionSimulation.SourceParameters","page":"Fourier Spectral Parameters","title":"StochasticGroundMotionSimulation.SourceParameters","text":"SourceParameters\n\nCustom type defining the source parameters of a Fourier spectrum\n\nΔσ::Union{Float64,Dual{Float64}} is the stress parameter in bars\nRΘϕ::Float64 is the radiation pattern\nV::Float64 is the partition factor (for splitting to horizontal components)\nF::Float64 is the free surface factor\nβ::Float64 is the source velocity in units of km/s\nρ::Float64 is the source density in units of t/m^3 or g/cm^3\nsrc_model::Symbol identifies the type of source spectrum (:Brune, AtkinsonSilva2000)\n\n\n\n\n\n","category":"type"},{"location":"fourier_parameters/#Path-Parameters","page":"Fourier Spectral Parameters","title":"Path Parameters","text":"","category":"section"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"The type PathParameters holds the properties required to define the path scaling of the Fourier Amplitude Spectrum.","category":"page"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"  PathParameters","category":"page"},{"location":"fourier_parameters/#StochasticGroundMotionSimulation.PathParameters","page":"Fourier Spectral Parameters","title":"StochasticGroundMotionSimulation.PathParameters","text":"PathParameters\n\nCustom type defining the path parameters of a Fourier spectrum. Consists of three other custom structs\n\ngeometric is a GeometricSpreadingParameters type\nsaturation is a NearSourceSaturationParameters type\nanelastic is an AnelasticAttenuationParameters type\n\n\n\n\n\n","category":"type"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"This type also hold instances of three other custom types that define aspects of the path scaling:","category":"page"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"GeometricSpreadingParameters defined in Geometric Spreading\nNearSourceSaturationParameters defined in Near Source Saturation\nAnelasticAttenuationParameters defined in Anelastic Attenuation","category":"page"},{"location":"fourier_parameters/#Geometric-Spreading","page":"Fourier Spectral Parameters","title":"Geometric Spreading","text":"","category":"section"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"GeometricSpreadingParameters","category":"page"},{"location":"fourier_parameters/#StochasticGroundMotionSimulation.GeometricSpreadingParameters","page":"Fourier Spectral Parameters","title":"StochasticGroundMotionSimulation.GeometricSpreadingParameters","text":"GeometricSpreadingParameters{S<:Real,T<:Real,U<:AbstractVector{Bool}}\n\nStruct for geometric spreading parameters. Holds fields:\n\nRrefi are reference distances, these are <:Real but will generally be Float64 values\nγconi are constant spreading rates, meaning that they will not be free for AD purposes\nγvari are variable spreading rates, meaning that they can be represented as Dual numbers for AD\nγfree is a vector of Bool instances, or a BitVector that indicates which segments are constant or variable. Variable spreading rates are given 1 or true\nmodel is a symbol defining the type of spreading model :Piecewise, :CY14, :CY14mod\n\n\n\n\n\n","category":"type"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"### Near Source Saturation","category":"page"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"NearSourceSaturationParameters","category":"page"},{"location":"fourier_parameters/#Anelastic-Attenuation","page":"Fourier Spectral Parameters","title":"Anelastic Attenuation","text":"","category":"section"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"AnelasticAttenuationParameters","category":"page"},{"location":"fourier_parameters/#Site-Parameters","page":"Fourier Spectral Parameters","title":"Site Parameters","text":"","category":"section"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"The type SiteParameters holds information related to the site response – both impedance effects and damping.","category":"page"},{"location":"fourier_parameters/","page":"Fourier Spectral Parameters","title":"Fourier Spectral Parameters","text":"SiteParameters","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = StochasticGroundMotionSimulation","category":"page"},{"location":"#StochasticGroundMotionSimulation","page":"Home","title":"StochasticGroundMotionSimulation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for the Julia package StochasticGroundMotionSimulation.jl. The main module StochasticGroundMotionSimulation provides an interface to the stochastic method for the simulation of response spectral ordinates via Random Vibration Theory.","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A number of default parameters are already set within the package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using StochasticGroundMotionSimulation\n\nΔσ = 100.0\nRrefi = [ 1.0, 50.0, Inf ]\nγi = [ 1.0, 0.5 ]\nQ0 = 200.0\nη = 0.5\nκ0 = 0.039\n\nsrc = SourceParameters(Δσ)\ngeo = GeometricSpreadingParameters(Rrefi, γi, :CY14)\nsat = NearSourceSaturationParameters(:BT15)\nane = AnelasticAttenuationParameters(Q0, η)\npath = PathParameters(geo, sat, ane)\nsite = SiteParameters(κ0, :Boore2016)\n\nfas = FourierParameters(src, path, site)\n\nrvt = RandomVibrationParameters()\n\nT = 1.0\nm = 6.0\nr_rup = 10.0\nr_ps = equivalent_point_source_distance(r_rup, m, fas)\n\nSa = rvt_response_spectral_ordinate(T, m, r_ps, fas, rvt)\nprintln(\"Sa = $(Sa)g, for m = $m, r_rup = $r_rup, and a period of T = $(T) s\")\n","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"fourier_parameters.md\",\"random_vibration_parameters.md\",\"sdof_parameters.md]\nDepth = 4","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [StochasticGroundMotionSimulation]","category":"page"},{"location":"#StochasticGroundMotionSimulation.AnelasticAttenuationParameters","page":"Home","title":"StochasticGroundMotionSimulation.AnelasticAttenuationParameters","text":"AnelasticAttenuationParameters{S<:Real,T<:Real}\n\nStruct for anelastic attenuation parameters. Holds fields:\n\nQ0 quality factor at 1 Hz\nη quality exponent ∈ [0,1)\ncQ velocity (km/s) along propagation path used to determine Q(f)\nrmetric is a symbol :Rrup or :Rps to define which distance metric is used for anelastic attenuation\n\n\n\n\n\n","category":"type"},{"location":"#StochasticGroundMotionSimulation.FourierParameters","page":"Home","title":"StochasticGroundMotionSimulation.FourierParameters","text":"FourierParameters\n\nCustom type for the parameters the Fourier amplitude spectrum. This type is comprised of source, path and site types.\n\n\n\n\n\n","category":"type"},{"location":"#StochasticGroundMotionSimulation.NearSourceSaturationParameters","page":"Home","title":"StochasticGroundMotionSimulation.NearSourceSaturationParameters","text":"NearSourceSaturationParameters{S<:Real,T<:Real,U<:AbstractVector{Bool}}\n\nStruct for near-source saturation parameters. Mimic structure of the GeometricSpreadingParameters struct. Holds fields:\n\nmRefi reference magnitudes\nhconi constrained coefficients, not free for AD purposes\nhvari variable coefficients, free for AD purposes\nhfree is a vector of Bool instances, or a BitVector indicating which parameters are constant or variable\nexponent is the exponent used within equivalent point-source distance calculations: r_ps = leftr_rup^n + h(m)^nright^1n\nmodel is a symbol defining the type of saturation model:\n\n- `:BT15` is Boore & Thompson (2015)\n- `:YA15` is Yenier & Atkinson (2015)\n- `:CY14` is average Chiou & Youngs (2014)\n- `:None` returns zero saturation length\n- `:ConstantConstrained` is a fixed saturation length not subject to AD operations\n- `:ConstantVariable` is a fixed saturation length that is subject to AD operations (i.e., is a `<:Dual`)\n\n\n\n\n\n","category":"type"},{"location":"#StochasticGroundMotionSimulation.Oscillator","page":"Home","title":"StochasticGroundMotionSimulation.Oscillator","text":"Oscillator\n\nCustom type to represent a SDOF oscillator. The type has two fields:\n\nf_n is the natural frequency of the oscillator\nζ_n is the damping ratio\n\nExamples\n\n    sdof = Oscillator( 1.0, 0.05 )\n\n\n\n\n\n","category":"type"},{"location":"#StochasticGroundMotionSimulation.Oscillator-Tuple{T} where T<:Float64","page":"Home","title":"StochasticGroundMotionSimulation.Oscillator","text":"Oscillator(f_n)\n\nDefault initializer setting the damping ratio to 5% of critical\n\nf_n is the natural frequency of the oscillator (in Hz)\n\n# Examples\n\n    f_n = 2.0\n    sdof = Oscillator(f_n)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.RandomVibrationParameters","page":"Home","title":"StochasticGroundMotionSimulation.RandomVibrationParameters","text":"RandomVibrationParameters\n\nStruct holding parameters/methods for Random Vibration Theory.\n\npf_method is the method used for peak factor computation\n\n- `:DK80` (default) is Der Kiureghian (1980), building on Vanmarcke (1975)\n- `:CL56` is Cartwright Longuet-Higgins (1956)\n\ndur_ex is the model for excitation duration\n\n- `:BT14` is the Boore & Thompson (2014) model - note that this is adpated to work with `r_ps`\n\ndur_rms is the model for rms duration\n\n- `:BT12` is the Boore & Thompson (2012) model\n\ndur_region is the region specified for the duration model\n\n- `:WNA` is western North America\n- `:ENA` is eastern North America\n\n\n\n\n\n","category":"type"},{"location":"#StochasticGroundMotionSimulation.SiteParameters","page":"Home","title":"StochasticGroundMotionSimulation.SiteParameters","text":"SiteParameters\n\nCustom type defining the site parameters of a Fourier spectrum\n\nκ0::Union{Float64,Dual{Float64}} is the site kappa in units of s\namp_model::Symbol is a symbol identifying the impedance function\n\n\n\n\n\n","category":"type"},{"location":"#StochasticGroundMotionSimulation.alatik_2021_cy14_inverted_amplification-Tuple{T} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.alatik_2021_cy14_inverted_amplification","text":"alatik_2021_cy14_inverted_amplification(f::T) where T<:Real\n\nComputes the generic crustal amplification for a velocity profile with Vs30 of 760 m/s obtained from inverting the Chiou & Youngs (2014) ground-motion model.\n\nAmplifications provided ahead of Al Atik & Abrahamson (2021) publication.\n\nExamples\n\n\tf = 5.0\n\tAf = alatik_2021_cy14_inverted_amplification(f)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.alatik_2021_cy14_inverted_amplification_seg-Tuple{T} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.alatik_2021_cy14_inverted_amplification_seg","text":"alatik_2021_cy14_inverted_amplification_seg(f::T) where T<:Real\n\nComputes the generic crustal amplification for a velocity profile with Vs30 of 760 m/s obtained from inverting the Chiou & Youngs (2014) ground-motion model.\n\nAmplifications provided ahead of Al Atik & Abrahamson (2021) publication.\n\nSame as alatik2021cy14invertedamplification, just segmented to speed up the indexing.\n\nExamples\n\n\tf = 5.0\n\tAf = alatik_2021_cy14_inverted_amplification_seg(f)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.anelastic_attenuation-Union{Tuple{T}, Tuple{S}, Tuple{S,T,AnelasticAttenuationParameters}} where T<:Real where S<:Float64","page":"Home","title":"StochasticGroundMotionSimulation.anelastic_attenuation","text":"anelastic_attenuation(f::S, r::T, anelastic::AnelasticAttenuationParameters) where {S<:Float64,T<:Real}\n\nAnelastic attenuation filter, computed using equivalent point source distance metric or a standard rupture distance.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.boore_2016_generic_amplification-Tuple{T} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.boore_2016_generic_amplification","text":"boore_2016_generic_amplification(f)\n\nComputes the generic crustal amplification for a WUS velocity profile with Vs30 of 760 m/s using the Boore (2016) velocity model.\n\nExamples\n\n\tf = 5.0\n\tAf = boore_2016_generic_amplification(f)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.combined_kappa_frequency-Union{Tuple{T}, Tuple{T,AnelasticAttenuationParameters,SiteParameters}} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.combined_kappa_frequency","text":"combined_kappa_frequency(r::T, ane::AnelasticAttenuationParameters, site::SiteParameters) where T<:Real\n\nFrequency at which the combined κr and κ0 filters (squared versions) give a value of 0.5. r can be either r_ps or r_rup depending upon what matches ane.rmetric\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.corner_frequency-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{U,SourceParameters{S,T}}} where U<:Real where T<:Real where S<:Float64","page":"Home","title":"StochasticGroundMotionSimulation.corner_frequency","text":"corner_frequency(m::U, src::SourceParameters{S,T}) where {S<:Float64, T<:Real, U<:Real}\n\nComputes a 3-tuple of corner frequency components, depending upon source spectrum type. By default the single-corner Brune spectrum is considered, but if src.model equals :Atkinson_Silva_2000 then the components of the double-corner spectrum are returned. If some other symbol is passed then the Brune model is returned.\n\nExamples\n\n    m = 6.0\n    Δσ = 100.0\n    κ0 = 0.035\n    fas = FASParams(Δσ, κ0)\n    # compute single corner frequency\n\tsrc.model = :Brune\n    fc, tmp1, tmp2 = corner_frequency(m, src)\n    # compute double corner frequencies\n\tsrc.model = :Atkinson_Silva_2000\n    fa, fb, ε = corner_frequency(m, src)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.corner_frequency_atkinson_silva_2000-Tuple{T} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.corner_frequency_atkinson_silva_2000","text":"corner_frequency_atkinson_silva_2000(m::T) where T<:Real\n\nComputes the corner frequencies, fa, fb, and the mixing parameter ε from the Atkinson & Silva (2000) double corner frequency model. This is the default source corner frequency model used by Boore & Thompson (2014) to define their source duration. But note that they just use fa. This function returns fb and ε also\n\n# Examples\n\n    m = 6.0\n    fa, fb, ε = corner_frequency_atkinson_silva_2000(m)\n\nSee also: corner_frequency\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.corner_frequency_brune-Union{Tuple{T}, Tuple{S}, Tuple{S,T}, Tuple{S,T,Float64}} where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.corner_frequency_brune","text":"corner_frequency_brune(m::S, Δσ::T, β::Float64=3.5) where {S<:Real, T<:Real}\n\nComputes the corner frequency using the Brune model. \t- m is the moment magnitude \t- Δσ is the stress drop in units of bars \t- β is the shear-wave velocity at the source in units of km/s\n\n# Examples\n\n\tm = 6.0\n\tΔσ = 100.0\n\tβ = 3.5\n\tfc = corner_frequency_brune(m, Δσ, β)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.equivalent_point_source_distance-Tuple{Any,Any,NearSourceSaturationParameters}","page":"Home","title":"StochasticGroundMotionSimulation.equivalent_point_source_distance","text":"equivalent_point_source_distance(r, m, sat::NearSourceSaturationParameters)\n\nCompute equivalent point source distance\n\nr is r_hyp or r_rup (depending upon the size of the event – but is nominally r_rup)\nm is magnitude\nsat contains the NearSourceSaturationParameters\n\nSee also: near_source_saturation\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.finite_fault_factor_bt15-Tuple{T} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.finite_fault_factor_bt15","text":"finite_fault_factor_bt15(m::T) where T<:Real\n\nFinite fault factor from Boore & Thompson (2015) used to create equivalent point-source distance.\n\nSee also: near_source_saturation, finite_fault_factor_ya15, finite_fault_factor_cy14\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.finite_fault_factor_cy14-Tuple{T} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.finite_fault_factor_cy14","text":"finite_fault_factor_cy14(m::T) where T<:Real\n\nFinite fault factor for Chiou & Youngs (2014) used to create equivalent point-source distance. This is a model developed to match the average saturation length over the full period range.\n\nSee also: near_source_saturation, finite_fault_factor_bt15, finite_fault_factor_ya15\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.finite_fault_factor_ya15-Tuple{T} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.finite_fault_factor_ya15","text":"finite_fault_factor_ya15(m::T) where T<:Real\n\nFinite fault factor from Yenier & Atkinson (2015) used to create equivalent point-source distance.\n\nSee also: near_source_saturation, finite_fault_factor_bt15, finite_fault_factor_cy14\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_attenuation-Union{Tuple{W}, Tuple{V}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{S,T,AnelasticAttenuationParameters{U,V},SiteParameters{W}}} where W<:Real where V<:Real where U<:Real where T<:Real where S<:Float64","page":"Home","title":"StochasticGroundMotionSimulation.fourier_attenuation","text":"fourier_attenuation(f::S, r::T, ane::AnelasticAttenuationParameters{U,V}, site::SiteParameters{W}) where {S<:Float64,T<:Real,U<:Real,V<:Real,W<:Real}\n\nCombined full-path attenuation, including Q(f) effects and κ0 filter for frequency f Distance defined in terms of an equivalent point source distance r_ps or rupture distance r_rup depending upon what metric is defined in ane.rmetric\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_constant-Tuple{SourceParameters}","page":"Home","title":"StochasticGroundMotionSimulation.fourier_constant","text":"fourier_constant(src::SourceParameters)\n\nDefine the constant source term for the Fourier Amplitude Spectrum. Constant set to permit distances to be passed in km, densities in t/m^3, and velocities in km/s The reference distance is set to 1.0 km (and interpreted to be a rupture distance).\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_path-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{U,T,S,GeometricSpreadingParameters,NearSourceSaturationParameters,AnelasticAttenuationParameters}} where U<:Float64 where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_path","text":"fourier_path(f::U, r_ps::T, m::S, geo::GeometricSpreadingParameters, sat::NearSourceSaturationParameters, ane::AnelasticAttenuationParameters) where {S<:Real,T<:Real,U<:Float64}\n\nPath scaling of Fourier spectral model – combination of geometric spreading and anelastic attenuation.\n\nSee also: geometric_spreading, anelastic_attenuation\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_site-Tuple{Float64,SiteParameters}","page":"Home","title":"StochasticGroundMotionSimulation.fourier_site","text":"fourier_site(f::Float64, site::SiteParameters)\n\nCombined site amplification and kappa filter for frequency f\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_source-Tuple{Any,Any,FourierParameters}","page":"Home","title":"StochasticGroundMotionSimulation.fourier_source","text":"fourier_source(f, m, fas::FourierParameters)\n\nSource Fourier Amplitude Spectrum of displacement, without the constant term. This simply includes the seismic moment and the source spectral shape. Defined using a FourierParameters instance for the source model.\n\nSee also: fourier_source_shape\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_source-Union{Tuple{T}, Tuple{S}, Tuple{T,S,SourceParameters}} where T<:Float64 where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_source","text":"fourier_source(f::T, m::S, src::SourceParameters) where {S<:Real,T<:Float64}\n\nSource Fourier Amplitude Spectrum of displacement, without the constant term. This simply includes the seismic moment and the source spectral shape.\n\nSee also: fourier_source_shape\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_source_shape-Tuple{Any,Any,FourierParameters}","page":"Home","title":"StochasticGroundMotionSimulation.fourier_source_shape","text":"fourier_source_shape(f, m, fas::FourierParameters)\n\nSource shape of the Fourier amplitude spectrum of displacement, without the constant term or seismic moment. Defined using a FourierParameters instance for the source model.\n\nSee also: fourier_source_shape\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_source_shape-Union{Tuple{T}, Tuple{Float64,T,T,T,Symbol}} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_source_shape","text":"fourier_source_shape(f::Float64, fa::T, fb::T, ε::T, model::Symbol) where T<:Real\n\nFourier amplitude spectral shape for displacement defined by corner frequencies.\n\nSee also: fourier_source_shape\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_source_shape-Union{Tuple{T}, Tuple{S}, Tuple{T,S,SourceParameters}} where T<:Float64 where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_source_shape","text":"fourier_source_shape(f::T, m::S, src::SourceParameters) where {S<:Real,T<:Float64}\n\nSource shape of the Fourier Amplitude Spectrum of displacement, without the constant term or seismic moment. This simply includes the source spectral shape.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_spectral_ordinate-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{U,S,T,FourierParameters}} where U<:Float64 where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_spectral_ordinate","text":"fourier_spectral_ordinate(f::U, m::S, r_ps::T, fas::FourierParameters) where {S<:Real,T<:Real,U<:Float64}\n\nFourier acceleration spectral ordinate (m/s) based upon an equivalent point source distance r_ps\n\nf is frequency (Hz)\nm is magnitude\nr_ps is the equivalent point source distance including saturation effects (km)\nfas are the Fourier spectral parameters FourierParameters\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_spectral_ordinate-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{U,S,T,SourceParameters,GeometricSpreadingParameters,NearSourceSaturationParameters,AnelasticAttenuationParameters,SiteParameters}} where U<:Float64 where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_spectral_ordinate","text":"fourier_spectral_ordinate(f::S, m::S, r_ps::T, src::SourceParameters, geo::GeometricSpreadingParameters, ane::AnelasticAttenuationParameters, site::SiteParameters) where {S<:Float64,T<:Real}\n\nFourier acceleration spectral ordinate (m/s) based upon an equivalent point source distance r_ps\n\nf is frequency (Hz)\nm is magnitude\nr_ps is the equivalent point source distance including saturation effects (km)\nsrc are the source parameters SourceParameters\ngeo are the geometric spreading parameters GeometricSpreadingParameters\nsat are the near source saturation parameters NearSourceSaturationParameters\nane are the anelastic attenuation parameters AnelasticAttenuationParameters\nsite are the site parameters SiteParameters\n\nSee also: fourier_spectrum, fourier_spectrum!\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_spectral_ordinate-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{U,S,T,SourceParameters,PathParameters,SiteParameters}} where U<:Float64 where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_spectral_ordinate","text":"fourier_spectral_ordinate(f::U, m::S, r_ps::T, src::SourceParameters, path::PathParameters, site::SiteParameters) where {S<:Real,T<:Real,U<:Float64}\n\nFourier acceleration spectral ordinate (m/s) based upon an equivalent point source distance r_ps\n\nf is frequency (Hz)\nm is magnitude\nr_ps is the equivalent point source distance including saturation effects (km)\nsrc are the source parameters SourceParameters\npath are the path parameters PathParameters\nsite are the site parameters SiteParameters\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_spectrum!-Union{Tuple{V}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{Array{U,1},Array{V,1},S,T,FourierParameters}} where V<:Float64 where U<:Real where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_spectrum!","text":"fourier_spectrum!(Af::Vector{U}, f::Vector{V}, m::S, r_ps::T, fas::FourierParameters) where {S<:Real,T<:Real,U<:Real,V<:Float64}\n\nFourier acceleration spectrum (m/s) based upon an equivalent point source distance r_ps\n\nAf is the vector of fas amplitudes to be filled (m/s)\nf is Vector of frequencies (Hz)\nm is magnitude\nr_ps is the equivalent point source distance including saturation effects (km)\nfas are the Fourier spectral parameters FourierParameters\n\nSee also: fourier_spectrum\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.fourier_spectrum-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{Array{U,1},S,T,FourierParameters}} where U<:Float64 where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.fourier_spectrum","text":"fourier_spectrum(f::Vector{U}, m::S, r_ps::T, fas::FourierParameters) where {S<:Real,T<:Real,U<:Float64}\n\nFourier acceleration spectrum (m/s) based upon an equivalent point source distance r_ps\n\nf is Vector of frequencies (Hz)\nm is magnitude\nr_ps is the equivalent point source distance including saturation effects (km)\nfas are the Fourier spectral parameters FourierParameters\n\nSee also: fourier_spectral_ordinate\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.geometric_spreading-Union{Tuple{T}, Tuple{S}, Tuple{T,S,GeometricSpreadingParameters,NearSourceSaturationParameters}} where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.geometric_spreading","text":"geometric_spreading(r_ps::T, m::S, geo::GeometricSpreadingParameters, sat::NearSourceSaturationParameters) where {S<:Real, T<:Real}\n\nGeometric spreading function, switches between different approaches on path.geo_model.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.geometric_spreading_cy14-Union{Tuple{V}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{V,GeometricSpreadingParameters{S,T,U}}} where V<:Real where U<:AbstractArray{Bool,1} where T<:Real where S<:Float64","page":"Home","title":"StochasticGroundMotionSimulation.geometric_spreading_cy14","text":"geometric_spreading_cy14(r_ps::V, geo::GeometricSpreadingParameters{S,T,U}) where {S<:Float64, T<:Real, U<:AbstractVector{Bool}, V<:Real}\n\nGeometric spreading function from Chiou & Youngs (2014). Defines a smooth transition from one rate γi[1] to another γi[2], with a spreading bandwidth of Rrefi[2] km.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.geometric_spreading_cy14mod-Union{Tuple{W}, Tuple{V}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{V,W,GeometricSpreadingParameters{S,T,U},NearSourceSaturationParameters}} where W<:Real where V<:Real where U<:AbstractArray{Bool,1} where T<:Real where S<:Float64","page":"Home","title":"StochasticGroundMotionSimulation.geometric_spreading_cy14mod","text":"geometric_spreading_cy14mod(r_ps::V, m::S, geo::GeometricSpreadingParameters{S,T,U}, sat::NearSourceSaturationParameters) where {S<:Float64, T<:Real, U<:AbstractVector{Bool}, V<:Real, W<:Real}\n\nGeometric spreading function from Chiou & Youngs (2014). Modified to make use of both r_ps and r_rup so that only the first saturation term contaminates the source amplitudes. Defines a smooth transition from one rate γi[1] to another γi[2], with a spreading bandwidth of Rrefi[2] km.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.geometric_spreading_piecewise-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{S,GeometricSpreadingParameters{T,T,U}}} where U<:AbstractArray{Bool,1} where T<:Float64 where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.geometric_spreading_piecewise","text":"geometric_spreading_piecewise(r_ps::S, geo::GeometricSpreadingParameters{T,T,U}) where {S<:Real, T<:Float64, U<:AbstractVector{Bool}}\n\nPiecewise linear (in log-log space) geometric spreading function. Makes use of the reference distances Rrefi and spreading rates γi in path.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.geometric_spreading_piecewise-Union{Tuple{V}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{V,GeometricSpreadingParameters{S,T,U}}} where V<:Real where U<:AbstractArray{Bool,1} where T<:Real where S<:Float64","page":"Home","title":"StochasticGroundMotionSimulation.geometric_spreading_piecewise","text":"geometric_spreading_piecewise(r_ps::V, geo::GeometricSpreadingParameters{S,T,U}) where {S<:Float64, T<:Real, U<:AbstractVector{Bool}, V<:Real}\n\nPiecewise linear (in log-log space) geometric spreading function. Makes use of the reference distances Rrefi and spreading rates γi in path.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.get_parametric_type-Tuple{FourierParameters}","page":"Home","title":"StochasticGroundMotionSimulation.get_parametric_type","text":"get_parametric_type(fas::FourierParameters)\n\nExtract type most elaborate type from parametric FourierParameters struct. This requires dropping down to lower level structs within fas.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.get_parametric_type-Tuple{PathParameters}","page":"Home","title":"StochasticGroundMotionSimulation.get_parametric_type","text":"get_parametric_type(path::PathParameters)\n\nExtract type most elaborate type from parametric PathParameters struct. This requires dropping down to lower level structs within path.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.get_parametric_type-Union{Tuple{AnelasticAttenuationParameters{S,T}}, Tuple{T}, Tuple{S}} where T where S","page":"Home","title":"StochasticGroundMotionSimulation.get_parametric_type","text":"get_parametric_type(anelastic::AnelasticAttenuationParameters{S,T}) where {S,T}\n\nExtract type most elaborate type S or T from parametric AnelasticAttenuationParameters struct\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.get_parametric_type-Union{Tuple{GeometricSpreadingParameters{S,T,U}}, Tuple{U}, Tuple{T}, Tuple{S}} where U where T where S","page":"Home","title":"StochasticGroundMotionSimulation.get_parametric_type","text":"get_parametric_type(geo::GeometricSpreadingParameters{S,T,U}) where {S,T,U} = T\n\nExtract type of T from parametric GeometricSpreadingParameters struct\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.get_parametric_type-Union{Tuple{NearSourceSaturationParameters{S,T,U}}, Tuple{U}, Tuple{T}, Tuple{S}} where U where T where S","page":"Home","title":"StochasticGroundMotionSimulation.get_parametric_type","text":"get_parametric_type(sat::NearSourceSaturationParameters{S,T,U}) where {S,T,U} = T\n\nExtract type of T from parametric NearSourceSaturationParameters struct\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.get_parametric_type-Union{Tuple{SiteParameters{T}}, Tuple{T}} where T","page":"Home","title":"StochasticGroundMotionSimulation.get_parametric_type","text":"get_parametric_type(site::SiteParameters{T}) where {T} = T\n\nExtract type of T from parametric SiteParameters struct\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.get_parametric_type-Union{Tuple{SourceParameters{S,T}}, Tuple{T}, Tuple{S}} where T where S","page":"Home","title":"StochasticGroundMotionSimulation.get_parametric_type","text":"get_parametric_type(src::SourceParameters{S,T}) where {S,T} = T\n\nExtract type of T from parametric SourceParameters struct\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.kappa_filter-Tuple{Any,SiteParameters}","page":"Home","title":"StochasticGroundMotionSimulation.kappa_filter","text":"kappa_filter(f, site::SiteParameters)\n\nKappa filter for a given frequency f\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.magnitude_to_moment-Tuple{T} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.magnitude_to_moment","text":"magnitude_to_moment(m::T) where T<:Real\n\nConverts moment magnitude to seismic moment (in dyne-cm).\n\n# Examples\n\n\tm = 6.0\n\tM0 = magnitude_to_moment(m)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.near_source_saturation-Tuple{Any,FourierParameters}","page":"Home","title":"StochasticGroundMotionSimulation.near_source_saturation","text":"near_source_saturation(m, fas::FourierParameters)\n\nNear-source saturation term taking a FourierParameters struct.\n\nSee also: near_source_saturation\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.near_source_saturation-Tuple{Any,NearSourceSaturationParameters}","page":"Home","title":"StochasticGroundMotionSimulation.near_source_saturation","text":"near_source_saturation(m, sat::NearSourceSaturationParameters)\n\nNear-source saturation term. Used to create equivalent point-source distance. Switches methods based upon sat.model.\n\nArguments\n\nOptions for sat.model are:\n\n:BT15 for Boore & Thompson (2015) finite fault factor\n:YA15 for Yenier & Atkinson (2014) finite fault factor\n:CY14 for a model fitted to the Chiou & Youngs (2014) saturation lengths (over all periods)\n:None for zero saturation length\n:ConstantConstrained for a constant value, sat.hconi[1], not subject to AD operations\n:ConstantVariable for a constant value, sat.hvari[1], that is subject to AD operations\n\nAny other symbol passed will return NaN.\n\nSee also: near_source_saturation\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.near_source_saturation-Tuple{Any,PathParameters}","page":"Home","title":"StochasticGroundMotionSimulation.near_source_saturation","text":"near_source_saturation(m, path::PathParameters)\n\nNear-source saturation term taking a PathParameters struct.\n\nSee also: near_source_saturation\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.peak_factor-Union{Tuple{T}, Tuple{S}, Tuple{S,T,FourierParameters,Oscillator,RandomVibrationParameters}} where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.peak_factor","text":"peak_factor(m::S, r_ps::T, fas::FourierParameters, sdof::Oscillator; pf_method::Symbol=:DK80) where {S<:Real,T<:Real}\n\nPeak factor umax / urms with a switch of pf_method to determine the approach adopted. pf_method can currently be one of: \t- :CL56 for Cartright Longuet-Higgins (1956) \t- :DK80 for Der Kiureghian (1980), building on Vanmarcke (1975)\n\nDefaults to :DK80.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.peak_factor-Union{Tuple{V}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{S,T,U,V,FourierParameters,Oscillator,RandomVibrationParameters}} where V<:Real where U<:Real where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.peak_factor","text":"peak_factor(m::S, r_ps::T, Dex::U, m0::V, fas::FourierParameters, sdof::Oscillator, rvt::RandomVibrationParameters) where {S<:Real,T<:Real,U<:Real,V<:Real}\n\nPeak factor umax / urms with a switch of pf_method to determine the approach adopted. pf_method can currently be one of: \t- :CL56 for Cartright Longuet-Higgins (1956) \t- :DK80 for Der Kiureghian (1980), building on Vanmarcke (1975)\n\nDefaults to :DK80.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.period-Tuple{Oscillator}","page":"Home","title":"StochasticGroundMotionSimulation.period","text":"period(sdof::Oscillator)\n\nNatural period (s) of the sdof Oscillator.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.rms_duration-Union{Tuple{T}, Tuple{S}, Tuple{Any,T,SourceParameters,Oscillator,RandomVibrationParameters}} where T<:Real where S<:Float64","page":"Home","title":"StochasticGroundMotionSimulation.rms_duration","text":"rmsduration(m::S, rps::T, src::SourceParameters, sdof::Oscillator, rvt::RandomVibrationParameters) where {S<:Float64,T<:Real}\n\nReturns a 3-tuple of (Drms, Dex, Dratio), using a switch on rvt.dur_rms. Default :BT12 makes use of the :BT14 model for excitation duration, Dex.\n\nm is magnitude\nr_ps is an equivalent point source distance\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.rupture_distance_from_equivalent_point_source_distance-Tuple{Any,Any,NearSourceSaturationParameters}","page":"Home","title":"StochasticGroundMotionSimulation.rupture_distance_from_equivalent_point_source_distance","text":"rupture_distance_from_equivalent_point_source_distance(r_ps, m, sat::NearSourceSaturationParameters)\n\nCompute rupture distance from equivalent point source distance\n\nr_ps is the equivalent point source distance\nm is magnitude\nsat contains the NearSourceSaturationParameters\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.simpsons_rule-Tuple{Array{T,1} where T,Array{T,1} where T}","page":"Home","title":"StochasticGroundMotionSimulation.simpsons_rule","text":"simpsons_rule(x::Vector, y::Vector)\n\nNumerical integration via Simpson's rule.\n\nLengths of vectors must be equal to each other, and be odd (to have an even number of intervals). Values in x represent abcissa values, while y are the integrand counterparts.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.site_amplification-Tuple{Any,FourierParameters}","page":"Home","title":"StochasticGroundMotionSimulation.site_amplification","text":"site_amplification(f, fas::FourierParameters)\n\nComputes the site amplification (impedance) for a given frequency f.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.site_amplification-Tuple{Any,SiteParameters}","page":"Home","title":"StochasticGroundMotionSimulation.site_amplification","text":"site_amplification(f, site::SiteParameters)\n\nComputes the site amplification (impedance) for a given frequency f.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.site_amplification-Union{Tuple{T}, Tuple{T,Symbol}} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.site_amplification","text":"site_amplification(f::Real, amp_model::Symbol)\n\nComputes the site amplification (impedance) for a given frequency f. Requires the keyword argument amp_model as a String and defaults to the Boore (2016) model. Currently, any other string passed to the function will return the unit amplification\n\n# Examples\n\n\tf = 5.0\n\t# returns the amplification from AlAtik (2021) in both cases\n\tAf = site_amplification(f)\n    Af = site_amplification(f; amp_model=:AlAtik2021_cy14)\n    # returns the Boore (2016) amplification\n\tAf = site_amplification(f; amp_model=:Boore2016)\n\t# returns 1.0\n\tAf = site_amplification(f; amp_model=:Unit)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.squared_fourier_spectral_ordinate-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{S,S,T,SourceParameters,GeometricSpreadingParameters,NearSourceSaturationParameters,AnelasticAttenuationParameters,SiteParameters}} where U<:Float64 where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.squared_fourier_spectral_ordinate","text":"squared_fourier_spectral_ordinate(f::U, m::S, r_ps::T, src::SourceParameters, geo::GeometricSpreadingParameters, ane::AnelasticAttenuationParameters, site::SiteParameters) where {S<:Real,T<:Real,U<:Float64}\n\nSquared Fourier acceleration spectral ordinate (m^2/s^2) based upon an equivalent point source distance r_ps\n\nf is frequency (Hz)\nm is magnitude\nr_ps is the equivalent point source distance including saturation effects (km)\nsrc are the source parameters SourceParameters\ngeo are the geometric spreading parameters GeometricSpreadingParameters\nsat are the near source saturation parameters NearSourceSaturationParameters\nane are the anelastic attenuation parameters AnelasticAttenuationParameters\nsite are the site parameters SiteParameters\n\nSee also: fourier_spectral_ordinate, squared_fourier_spectrum\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.squared_fourier_spectrum!-Union{Tuple{V}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{Array{U,1},Array{V,1},S,T,FourierParameters}} where V<:Float64 where U<:Real where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.squared_fourier_spectrum!","text":"squared_fourier_spectrum!(Afsq::Vector{U}, f::Vector{V}, m::S, r_ps::T, fas::FourierParameters) where {S<:Real,T<:Real,U<:Real,V<:Float64}\n\nFourier acceleration spectrum (m/s) based upon an equivalent point source distance r_ps\n\nAfsq is the vector of squared fas amplitudes to be filled (m^2/s^2)\nf is Vector of frequencies (Hz)\nm is magnitude\nr_ps is the equivalent point source distance including saturation effects (km)\nfas are the Fourier spectral parameters FourierParameters\n\nSee also: squared_fourier_spectrum, 'squaredfourierspectral_ordinate'\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.squared_fourier_spectrum-Union{Tuple{U}, Tuple{T}, Tuple{S}, Tuple{Array{U,1},S,T,FourierParameters}} where U<:Float64 where T<:Real where S<:Real","page":"Home","title":"StochasticGroundMotionSimulation.squared_fourier_spectrum","text":"squared_fourier_spectrum(f::Vector{U}, m::S, r_ps::T, fas::FourierParameters) where {S<:Real,T<:Real,U<:Float64}\n\nSquared Fourier amplitude spectrum. Useful within spectral moment calculations.\n\nSee also: fourier_spectrum, squared_fourier_spectral_ordinate\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.squared_transfer!-Tuple{Array{T,1} where T,Array{T,1} where T,Oscillator}","page":"Home","title":"StochasticGroundMotionSimulation.squared_transfer!","text":"squared_transfer!(Hf2::Vector, f::Vector, sdof::Oscillator)\n\nComputes the square of the modulus of the transfer function of a SDOF for a vector of frequencies in place: \t- Hf2::Vector is the pre-allocated vector into which the results are stored     - f::Vector is the vector of frequencies     - sdof::Oscillator is the oscillator instance\n\nExamples\n\n    f = collect(range(0.1, stop=10.0, step=0.01))\n    sdof = Oscillator(1.0)\n    Hf2 = similar(f)\n    squared_transfer!(Hf2, f, sdof)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.squared_transfer!-Union{Tuple{T}, Tuple{Array{T,1},Array{T,1},Oscillator}} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.squared_transfer!","text":"squared_transfer!(Hf2::Vector{T}, f::Vector{T}, sdof::Oscillator) where T<:Real\n\nComputes the square of the modulus of the transfer function of a SDOF for a vector of frequencies in place: \t- Hf2::Vector is the pre-allocated vector into which the results are stored     - f::Vector is the vector of frequencies     - sdof::Oscillator is the oscillator instance Inputs derive from the Real type and so are differentiable.\n\nExamples\n\n    f = collect(range(0.1, stop=10.0, step=0.01))\n    sdof = Oscillator(1.0)\n    Hf2 = similar(f)\n    squared_transfer!(Hf2, f, sdof)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.squared_transfer-Tuple{Any,Oscillator}","page":"Home","title":"StochasticGroundMotionSimulation.squared_transfer","text":"squared_transfer(f, sdof::Oscillator)\n\nCompute the square of the transfer function for a SDOF system, sdof, at frequency f.\n\nExamples\n\n\tf = 2.0\n\t# create sdof with natural frequency f_n=1.0 and damping ζ=0.05\n\tsdof = Oscillator( 1.0, 0.05 )\n\tHf2 = squared_transfer( f, sdof )\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.transfer!-Union{Tuple{T}, Tuple{Array{T,1},Array{T,1},Oscillator}} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.transfer!","text":"transfer!(Hf::Vector{T}, f::Vector{T}, sdof::Oscillator) where T<:Real\n\nComputes the modulus of the transfer function of a SDOF for a vector of frequencies in place \t- Hf::Vector is the pre-allocated vector into which the results are stored     - f::Vector is the vector of frequencies     - sdof::Oscillator is the oscillator instance\n\nExamples\n\n    f = collect(range(0.1, stop=10.0, step=0.01))\n    sdof = Oscillator(1.0)\n    Hf = similar(f)\n    transfer!(Hf, f, sdof)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.transfer-Tuple{Any,Oscillator}","page":"Home","title":"StochasticGroundMotionSimulation.transfer","text":"transfer(f::T, sdof::Oscillator) where {T<:Real}\n\nCompute the modulus of the transfer function for a SDOF system\n\nExamples\n\n    f = 2.0\n    sdof = Oscillator(1.0, 0.05)\n    Hf = transfer(f, sdof)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.transfer-Union{Tuple{T}, Tuple{Array{T,1},Oscillator}} where T<:Real","page":"Home","title":"StochasticGroundMotionSimulation.transfer","text":"transfer(f::Vector{T}, sdof::Oscillator) where T<:Real\n\nComputes the modulus of the transfer function of a SDOF for a vector of frequencies\n\nf::Vector is the vector of frequencies\nsdof::Oscillator is the oscillator instance\n\nExamples\n\n  f = collect(range(0.1, stop=10.0, step=0.01))\n  sdof = Oscillator(1.0)\n  Hf = transfer(f, sdof)\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.trapezoidal_rule-Tuple{Array{T,1} where T,Array{T,1} where T}","page":"Home","title":"StochasticGroundMotionSimulation.trapezoidal_rule","text":"trapezoidal_rule(x::Vector, y::Vector)\n\nNumerical integration via the Trapezoidal rule.\n\nLengths of vectors must be equal to each other. Values in x represent equally-spaced abcissa values, while y are the integrand counterparts.\n\n\n\n\n\n","category":"method"},{"location":"#StochasticGroundMotionSimulation.unit_generic_amplification-Tuple{}","page":"Home","title":"StochasticGroundMotionSimulation.unit_generic_amplification","text":"unit_generic_amplification()\n\nFunction used to represent null impedance effects. Use this function to represent site effects when no amplification is desired. Returns unity.\n\nExamples\n\n\tAf = unit_generic_amplification()\n\t# Af will equal 1.0\n\n\n\n\n\n","category":"method"}]
}
